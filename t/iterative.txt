Iterative development

Agile projects are iterative insofar as they intentionally allow for *repeating* software development activities, and for potentially *revisiting* the same work products (the phrase "planned rework" is sometimes used; [refactoring](refactoring.html) is a good example).
They are iterative in a third, less essential sense, in being most often structured around a series of [iterations](iteration.html) of fixed calendar length. However, some Agile approaches to scheduling, such as Kanban do away with iterations in this later sense, but retain the other aspects of multiple repetitions and planned rework.
Nearly all Agile projects are [incremental](incremental.html) as well as iterative. However, it is possible to use iterative strategies which are not also incremental; for instance, a "build it twice" strategy in which one first creates a throwaway prototype to gather user feedback, then uses insights from that experience to build the "real thing". Prototyping is necessarily an iterative strategy, and may have been a precursor to the development of iterative software development ideas.
