Incremental development

Nearly all Agile teams favor an incremental development strategy; in an Agile context, this means that each successive version of the product is usable, and each builds upon the previous version by adding user-visible functionality.
These are called "vertical" increments (that is, difference between successive product versions), as opposed to the opposite strategy which successively delivers complete technical components: for instance, creating a database schema, then building business rules on top of that, and only then implementing a UI.
([This article](http://agilefromthegroundup.blogspot.com/2009/12/agile-software-construction-is-like.html) offers a typical illustration of the distinction. It echoes the "layered cake" metaphor of software architecture: one can either cut along the horizontal layers, or vertically across them.)
It is difficult to imagine an incremental approach in the Agile sense which is not also [iterative](iterative.html), at least to some extent, but the two concepts are not identical. (They also prove surprisingly difficult to pin down, and are often the subject of heated semantic debates.)
