TDD

"Test-driven development" refers to a style of programming in which three activities are tightly interwoven: coding, testing (in the form of writing [unit tests](unittest.html)) and design (in the form of [refactoring](refactoring.html)).
It can be succinctly described by the following set of rules:

* write a **single** unit test describing an aspect of the program
* run the test, which should fail because the program lacks that feature
* write **just enough** code, the simplest possible, to make the test pass
* **refactor** the code until it conforms to the [simplicity criteria](simplicity.html)
* repeat, **accumulating** unit tests over time

TDD（テスト駆動開発）
TDDはプログラミングスタイッルのひとつで、コーディング、テスティング（「ユニットテスト」）、デザイン（「リファクタリング」）の３つの活動が密接に融合したもの。
TDDは以下の一連のルールにより端的に説明される。

* プログラムのある観点を表現するユニットテストを「１つだけ」書く
* そのテストを失敗させ、対応する機能がまだ実装されていないことを発見する
* 「必要十分な」しかし可能な限りシンプルなテストコードを書き、テストをパスさせる
* チーム内で定めた「シンプルさの指針」に適合するまでコードをリファクタリングする
* この手順を繰り返し、ユニットテストを蓄積する

１行要約
TDDとは、ユニットテスト書き、パスするシンプルなコードを実装し、リファクタリングを行うことを繰り返す開発手法です。
