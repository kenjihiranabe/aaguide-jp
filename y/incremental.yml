---
title: Incremental development
type: Concept
id: incremental
full: yes
sections:
  -
    type: desc
    text: |
      Nearly all Agile teams favor an incremental development strategy; in an Agile context, this means that each successive version of the product is usable, and each builds upon the previous version by adding user-visible functionality.
      These are called "vertical" increments (that is, difference between successive product versions), as opposed to the opposite strategy which successively delivers complete technical components: for instance, creating a database schema, then building business rules on top of that, and only then implementing a UI.
      ([This article](http://agilefromthegroundup.blogspot.com/2009/12/agile-software-construction-is-like.html) offers a typical illustration of the distinction. It echoes the "layered cake" metaphor of software architecture: one can either cut along the horizontal layers, or vertically across them.)
      It is difficult to imagine an incremental approach in the Agile sense which is not also [iterative](iterative.html), at least to some extent, but the two concepts are not identical. (They also prove surprisingly difficult to pin down, and are often the subject of heated semantic debates.)
  -
    type: histo
    text: |
      * 1980: substantial discussion of incremental development in IBM's Federal Systems Division can be found in a volume edited by Harlan Mills, "[Principles of software engineering](http://trace.tennessee.edu/cgi/viewcontent.cgi?article=1004&context=utk_harlan)", specifically an article by Dyer, which recommends organizing "each increment to maximize the separation of its function(s) from function(s) in other increments"; however, the idea is still very much that of a scheduled, phased approach rather than one responsive to change
      * 1984: while criticisms of the "waterfall" sequential approach have started much earlier, formulations of alternative incremental approaches are becoming more pointed; a good example is an early paper on "[Knowledge-based communication processes in software engineering](http://dl.acm.org/citation.cfm?id=801993)" advocating incremental development for the specific reason that "complete and stable specifications are not available".
      * 1985: perhaps the first explicitly named, incremental alternative to the "waterfall" approach is Tom Gilb's [Evolutionary Delivery Model](http://dl.acm.org/citation.cfm?id=1012490), nicknamed "Evo"
      * 1999: in an [article](http://www.objectmentor.com/resources/articles/IIDII.pdf) for the C++ Report, Robert C. Martin gives what is perhaps the earliest description of the Agile sense of the terms "iterative" and "incremental"
---
